name: Deploy Staging Image

on:
    push:
        branches:
            - main
        paths:
            - 'src/**'
    workflow_dispatch:

env:
    AWS_REGION: us-west-2
    ECR_REPOSITORY: 992382730467.dkr.ecr.us-west-2.amazonaws.com/staging-kogo-content-backend
    ENVIRONMENT: stg

jobs:
    deploy-docs:
        runs-on: ubuntu-latest

        steps:
            # Checkout the code
            - name: Checkout Code
              uses: actions/checkout@v3

            # Set up Java (OpenJDK 21)
            - uses: actions/setup-java@v3
              with:
                  distribution: temurin
                  java-version: 21

            # Set up AWS CLI credentials
            - name: Setup AWS CLI
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            # Log in to AWS ECR
            - name: Login to Amazon ECR
              id: ecr_login
              uses: aws-actions/amazon-ecr-login@v1

            # Get the current timestamp for tagging
            - name: Generate Timestamp
              id: timestamp
              run: echo "TIMESTAMP=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

            # Build the project using Gradle with profile 'stg'
            - name: Build with Gradle (stg profile)
              run: ./gradlew clean build -Dspring.profiles.active=${{ env.ENVIRONMENT }}

            # Build the Docker image and tag it with 'latest' and a combination of the timestamp and commit hash
            - name: Build Docker image
              run: |
                  COMMIT_HASH=${{ github.sha }}
                  docker build -t ${ECR_REPOSITORY}:latest -t ${ECR_REPOSITORY}:${{ env.TIMESTAMP }}-${COMMIT_HASH::7} .

            # Push both tags to Amazon ECR
            - name: Push Docker images to ECR
              run: |
                  docker push ${ECR_REPOSITORY}:latest
                  docker push ${ECR_REPOSITORY}:${{ env.TIMESTAMP }}
